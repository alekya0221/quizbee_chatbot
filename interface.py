# -*- coding: utf-8 -*-
"""interface.ipynb

Automatically generated by Colab.

Original file is located at
    https://colab.research.google.com/drive/12eiybm5ARRgu2bzgqb-vaoAJB6S18u3Z
"""

import sys
import time
import threading
import logging
from chat_memory import ChatMemory
from model_loader import load_chatbot_pipeline
from transformers import logging as hf_logging

# Suppress all Transformers warnings
hf_logging.set_verbosity_error()
logging.getLogger("transformers").setLevel(logging.ERROR)

loading_done = True

system_instruction = (
    "You are a helpful assistant. The user is asking about world capitals. "
    "Always respond with a single, direct sentence like 'The capital of X is Y.' "
    "Do not add extra cities or explanations."
)

def show_loading_animation():
    spinner = ["‚†ã", "‚†ô", "‚†π", "‚†∏", "‚†º", "‚†¥", "‚†¶", "‚†ß", "‚†á", "‚†è"]
    i = 0
    while not loading_done:
        sys.stdout.write(f"\rQuizBee is thinking {spinner[i % len(spinner)]}")
        sys.stdout.flush()
        time.sleep(0.1)
        i += 1
    sys.stdout.write("\r" + " " * 40 + "\r")

def main():
    global loading_done
    print("\nüêù QuizBee is ready! Type your question below. Type /exit to quit.\n")

    memory = ChatMemory()
    pipe = load_chatbot_pipeline()

    while True:
        user_input = input("You: ").strip()
        if user_input.lower() == "/exit":
            print("Exiting QuizBee. Goodbye!")
            break

        memory.add_user_input(user_input)
        prompt = memory.build_prompt(system_instruction)

        loading_done = False
        thread = threading.Thread(target=show_loading_animation)
        thread.start()

        try:
            output = pipe(prompt)[0]["generated_text"]
        except Exception as e:
            output = f"QuizBee: [ERROR] {e}"

        loading_done = True
        thread.join()

        response = output.replace(prompt, "").strip().split("User:")[0].strip()

        if response:
            print(f"QuizBee: {response.strip()}")
            memory.add_turn(user_input, response)
        else:
            print("QuizBee: I'm sorry, I couldn't generate a response.")

if __name__ == "__main__":
    main()